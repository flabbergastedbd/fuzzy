# There are two supported fuzz drivers as of now
# 1. Libfuzzer
# 2. Honggfuzz (No exec gathering, use LCov for coverage collector)
# 3. Fuzzy (You are responsible for all correct parameters in args, so basically can run any fuzzer here)
driver: Libfuzzer

# Consists of configuration to fine tune execution environment where fuzzer will be run
execution:
  # There are two kinds of executors
  # 1. Native
  # 2. Docker
  executor: Docker

  # Number of cpus to use for this job
  cpus: 2

  # Will be only used if executor is docker. Image needs to be uploaded to private registry on master.
  image: "<private_registry>:5000/snappy:fuzzy"

  # Path to fuzzer, will be used as entrypoint if Docker executor
  executable: /workspace/snappy/build/snappy_uncompress_fuzzer

  # DO NOT ADD folling PARAMETERS which are auto deduced based on `driver` unless using `Fuzzy` driver.
  # - Any logging related parameters.
  # - Any multiprocessing related parameters like libfuzzer's `-fork` or honggfuzz's `--threads`.
  #
  # You still have to pass corpus parameters, crash directory parameter if any
  args: ['-close_fd_mask=3', 'corpus/']

  # Useful to provide environmental variables to fuzzers or programs being fuzzed
  envs:
    HELLO: WORLD

  # Current Working Directory for fuzzing process.
  # - Docker executor, a volume will be mounted at this location (DONOT KEEP ANY FILES THERE).
  cwd: /fuzzing

corpus:
  # Relative path to cwd, all corpus files from master will be synced here periodically
  path: corpus

  # An identifier as to which kind of corpus files need to be download. Any new corpus discovered will
  # be uploaded with same label.
  label: snappy_uncompress

  # Interval at which updated corpus should be downloaded from master
  refresh_interval: 60

  # Any newly discovered corpus should be synced to master or not
  upload: true

  # Gives the ability to only select specific file patterns inside the corpus directory
  upload_filter: ".*"

crash:
  # Relative path to cwd, all crashes will be uploaded from here.
  path: "."

  # An identifier as to which kind of corpus files need to be download. Any new corpus discovered will
  # be uploaded with same label.
  label: snappy_libfuzzer

  # To filter files, as generally logfiles etc. are present too
  # For honggfuzz this filter will be ".*fuzz"
  filter: "crash-.*"

  # More on this in docs/PROFILE.md
  deduplicate:
    cpus: 1
    executor: Docker
    image: "<private_registry>:5000/snappy:fuzzy"
    executable: /bin/sh
    args: ['-c', 'diff <(cat $1 | sed -e "s/0x[0-9a-fA-F]*//g") <(cat $2 | sed -e "s/0x[0-9a-fA-F]*//g")']
    cwd: /deduplication

# A null fuzz stat will fall back to stat collection by fuzz drivers if implemented. This will
# be stdout parsing, log parsing etc.. Will not work if corpus is not uploaded
# Refreshed at same rate as corpus
fuzz_stat:
  collector: LCov
  execution:
    cpus: 1
    executor: Docker
    image: "snappy:fuzzy"
    executable: /bin/generate_lcov
    cwd: /profiling
