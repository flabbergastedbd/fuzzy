// Sticking to proto3 due to a very important thing
// Option<> is only present in proto2 as per prost, and we need
// that type as we have null columns in DB.
syntax = "proto2";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package xpc;

// Generic one to be used by all, for look ups for primary key
message Id {
    required int32 value = 1;
}

// Worker related
service Collector {
    rpc Heartbeat(NewWorker) returns (google.protobuf.Empty);
}

message NewWorker {
    required string uuid = 1;
    optional string name = 2;
    required int32 cpus = 3;
    required bool active = 4;
}

message Worker {
    required int32 id = 1;
    required string uuid = 2;
    required string name = 3;
    required int32 cpus = 4;
    required bool active = 5;
    required google.protobuf.Timestamp created_at = 6;
    // google.protobuf.Timestamp updated_at = 7;
}

// User interface related
service UserInterface {
    rpc SubmitTask(NewTask) returns (google.protobuf.Empty);
    // rpc GetTask(Id) returns (Task);
    rpc GetTasks(google.protobuf.Empty) returns (Tasks);

    rpc SubmitCorpus(NewCorpus) returns (google.protobuf.Empty);
}

message Tasks {
    repeated Task data = 1;
}

message NewTask {
    required string name = 1;
    required bool active = 2;
    required string executor = 3;
    required string fuzz_driver = 4;
}

message Task {
    required int32 id = 1;
    required string name = 2;
    required bool active = 3;
    optional string executor = 4;
    optional string fuzz_driver = 5;
    required google.protobuf.Timestamp created_at = 6;
    required google.protobuf.Timestamp updated_at = 7;
}

message NewCorpus {
    required bytes content = 1;
    required string checksum = 2;
    required string label = 3;
}

message Corpus {
    required int32 id = 1;
    required bytes content = 2;
    required string checksum = 3;
    required string label = 4;
    required int32 task_id = 5;
    optional int32 worker_id = 6;
    required google.protobuf.Timestamp created_at = 7;
}

message Corpora {
    repeated Corpus files = 1;
}
